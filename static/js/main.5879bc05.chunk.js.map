{"version":3,"sources":["component/Json.jsx","App.js","component/Dealers.jsx","serviceWorker.js","index.js"],"names":["productObj","tTest","props","Jlist","map","items","index","push","name","value","List","nProducts","_useState","useState","_useState2","Object","slicedToArray","hov","setHov","_useState3","_useState4","hovItem","setHovItem","_useState5","color","_useState6","styles","setstyles","x","length","stoc","CANTITATE","$numberInt","DENUMIRE","cRender","hoverIt","e","hoverOut","iList","item","react_default","a","createElement","onMouseLeave","key","onMouseEnter","onClick","filter","style","className","Dealers","setActive","data2","emptStoc","App","state","lastData","maker","redStoc","stylesB","background","getStoc","fetch","headers","Content-Type","Accept","then","response","json","myJson","newStoc","this","setState","bind","assertThisInitialized","_this","catch","err","console","log","changeC","notInStock","NISPercent","id","window","screen","width","scroll","doves","ID","emptyStoc","eStoc","findIt","inVal","target","refs","myInput","textArea","regex","search","find","split","RegExp","test","keySub","notInS","nIS","interval","setIn","setInterval","clearInterval","nextProps","nextState","_this3","component_Dealers","type","ref","placeholder","onKeyDown","onChange","Json","fromDb","data","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5879bc05.chunk.js","sourcesContent":["\r\n//import React from 'react';\r\nimport React, { useState } from 'react';\r\nimport Jlist from \"../output.json\";\r\nimport \"./item.css\";\r\n\r\n\r\nlet productObj =[];\r\n\r\n//console.log(\"json---\",Jlist.length)\r\n\r\nconst tTest =(props)=>{\r\n\r\n\r\n\r\n\r\nJlist.map((items,index) => {\r\n\r\n\r\n\r\n//if(productObj.length<Jlist.length){  /// prevent duplicates\r\nif(productObj){\r\n   productObj.push({\r\n      //  name:items.denumire,\r\n      name:null,\r\n        value:null,\r\n        //id: 'aa'\r\n    })\r\n//console.log(productObj.length)\r\n//console.log(Jlist.length)\r\n\r\n}\r\n})\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction List(props){\r\n\r\n  const [hov, setHov] = useState(false);  ///  hover STATE\r\n  const [hovItem, setHovItem] = useState(false);\r\n  const [styles, setstyles] = useState({ color:'#ff4c4c' });\r\n\r\n\r\n\r\n\r\n\r\n////\r\n   tTest(props); ///look up\r\n   for(let x=0; x<productObj.length;x++){   ///set productObj values\r\n  //  productObj[x].value=props.stoc[0];\r\n  //  productObj[x].name=JSON.stringify(props.stoc[0].ID);\r\n  if(props.stoc[x]){\r\nif(!props.stoc[x].CANTITATE.$numberInt){ productObj[x].value=0}else{  ///if item has no value fill with zero\r\n  productObj[x].value=props.stoc[x].CANTITATE.$numberInt;}\r\n\r\n  //productObj[x].id=props.stoc[x].ID;\r\n  productObj[x].name=props.stoc[x].DENUMIRE;\r\n\r\n}else if(props.cRender){\r\n  productObj[x].name = null;\r\n    productObj[x].value = null;\r\n    //  productObj[x].id = null\r\n\r\n}\r\n\r\n   }\r\n\r\n\r\n\r\n\r\n    let class1=\"stoc\";\r\n    let class2=\"item\";\r\n    let stoc=[];\r\n    if(stoc.length===1){\r\n        productObj[0].name=\"aaaaaa\";\r\n\r\n    }\r\n\r\n\r\n  ////////////// HOVER\r\n\r\n\r\nlet hoverIt=(e)=>{\r\n\r\n\r\n\r\n  setHov(true);\r\n\r\n setstyles({color:'#126db8'} )\r\n\r\n\r\n\r\n\r\n\r\n    setHovItem(e)\r\n\r\n\r\n}\r\n\r\nlet hoverOut=(e)=>{\r\n  setHov(false);\r\n\r\n}\r\n\r\n\r\n////////////// HOVER\r\n\r\n    let iList=[];\r\n\r\n\r\n\r\n\r\n    if(props.nProducts){productObj.length=props.nProducts}   ////get rid of bottom extra space\r\n\r\n//if(props.nProducs){props.nProducs=productObj.length}\r\n     iList=productObj.map((item,index) => <p onMouseLeave={hoverOut} key={index} ><span onMouseEnter={()=>{hoverIt(index)}}>{item.name}</span></p>);\r\n     stoc=productObj.map((item, index) =>  <p onClick={hoverIt}  key={index}><span>{item.value}</span></p>);\r\n\r\n\r\n\r\n\r\n////////CHANGE COLOR ON HOVER\r\n\r\nif(hov){\r\n  iList.filter(a => a.key ? a : false)\r\n  stoc[hovItem] =<p style={styles}><span>{productObj[hovItem].value}</span></p>\r\n  iList[hovItem] =<p style={styles}><span>{productObj[hovItem].name}</span></p>\r\n\r\n\r\n}\r\n\r\n////////CHANGE COLOR ON HOVER\r\n\r\n\r\n\r\n\r\n\r\n       return <div className=\"main\">\r\n\r\n\r\n        <div className={class2}>{iList}</div>\r\n        <div className={class1}>{stoc}</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\nimport Jsonl from './component/Json';\nimport Dealers from './component/Dealers';\n\nimport \"./component/item.css\";\n\n\n\nlet data2=[];\nlet emptStoc=[]; /// 0 or negative values array\nlet nProducts;\n\n\n\n\nclass App extends Component {\n\n  state={\n    lastData:[],\n    items:data2,\n    cRender: false,\n    maker:'All',\n    redStoc:'...'\n   \n   \n  \n\n\n  };\n\n  stylesB ={background:'#ff4c4c'};\n    \n    \n  \n\n\ngetStoc=() => {\n\n\n  fetch(\"https://webhooks.mongodb-stitch.com/api/client/v2.0/app/stitch1-hnbzk/service/http1/incoming_webhook/webhook0\", {\n\n\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n\n    }\n     })\n\n\n\n\n  .then(function(response) {\n\n    return response.json();\n\n\n  })\n .then(function(myJson) {\n\n\n\n\n  let lastDbItem=myJson[myJson.length-1].stoc;\n\n  let newStoc=lastDbItem.map((item, index)=>{   /// pull last stoc from database\n\n\n if(item.CANTITATE.$numberInt < 1 || item.CANTITATE.$numberInt == null){\n   emptStoc.push(item)\n }\n\n return item\n\n  })\n\n\ndata2=newStoc;\n\n    this.setState({items:data2,redStoc:emptStoc.length})\n    ///////////\n    \n    \n    \n    ///////// \n\n  }.bind(this))\n  .catch((err)=> console.log(err));\n\n//// check for values < 1\n\n};\n\n/// CHANGE INFO BUTTON COLOR  (according to producst out of stock) \nchangeC =(notInStock,items) =>{\n  let NISPercent =notInStock / items*100;\n  if( NISPercent<11){this.stylesB ={background: '#44d45c'};\n\n  }else if(NISPercent>11 && NISPercent< 21 ){\n  this.stylesB ={background: '#e0c00a'};\n \n  }else if(NISPercent >20  ){\n    this.stylesB ={background: '#ff4c4c'};\n  \n  }\n \n}\n  \n///\n  \n\nsetActive=(id,maker) =>{\n if(window.screen.width<500){window.scroll(0,500)}\n\nlet doves = data2.filter(a => a.ID[0] + a.ID[1]=== id ? a :false)\nthis.setState({\nitems: doves,\ncRender: true,\nmaker: maker,\n\n})\n\nthis.emptyStoc(doves)\n\n}\n\n\n\nemptyStoc=(doves)=>{\nlet eStoc = doves.filter(a =>{if(a.CANTITATE.$numberInt == null || a.CANTITATE.$numberInt < 0){return true}})\n\n  this.setState({\nredStoc: eStoc.length\n  })\n\n\n}\n\n/////////////// SEARCH BY PRODUCT NAME\n\nfindIt =(e)=>{window.scroll(0, 500)\n  let inVal\n  if(e){\n  inVal = e.target.value;\n  }\n\n  \n    const input = this.refs.myInput;  \n        const value = input.value;  \n        inVal = value\n        \n \n  \nthis.setState({textArea:inVal})\n\n\n  \n let find=inVal.split(' ');  /// extend search \n \n \n\nlet regex;\n\nlet search\n\n \n if(find.length === 1){\n  \n  regex = new RegExp(find[0],'gi' );   ///  regex\n\n  search = data2.filter(a => regex.test(a.DENUMIRE) ? a : false)\n\n  \n } else if(find.length > 1){\n\n  regex = new RegExp(find[0]+'.*'+find[1]+'|'+find[1]+'.*'+find[0],'gi' );   ///  regex\n\n  search = data2.filter(a => regex.test(a.DENUMIRE) ? a : false)\n  \n }\n \n this.setState({\n  items: search,\n  cRender: true\n    })\n \n}\n/////////////// SEARCH BY PRODUCT NAME\n\n////////////// KEY PRESS\n\nkeySub = (e) => {\n \n\n \n  if( e.key ===\"Enter\" ){\n \n    console.log(e.key)\n   \n  \n  }\n \n}\n\n////////////// KEY PRESS\n///////////// NOT IN STOCK - BUTTON\n\nnotInS =() =>{\n let nIS= this.state.items.filter(a => a.CANTITATE.$numberInt < 0 || !a.CANTITATE.$numberInt)\n this.setState({items:nIS})\n  //this.setState({items})\n}\n\n///////////// NOT IN STOCK\n\n\n\n\ncomponentWillMount(){\n\n  \n  \n\n\n////////////// make requests to server\n let getData= ()=>{\n  fetch(\"http://192.168.0.102:5000/\", {\n\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n     })\n\n\n  .then((response)=> {\n\n    return response.json();\n\n\n  })\n .then((myJson) => {\n\n  let servData= myJson.map(item => item.CANTITATE)\n\n\n    this.setState({items:servData})\n\n\n\n  })\n  .catch((err)=>{ console.log(err);if(err) getStoc()})  // if  error get data from database else call the server\n\n\n\n}\n////////////// make requests to server\n////////////// get data from database\n\nlet getStoc=() => {\n\n\n  fetch(\"https://webhooks.mongodb-stitch.com/api/client/v2.0/app/stitch1-hnbzk/service/http1/incoming_webhook/webhook0\", {\n\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n     })\n\n\n  .then(function(response) {\n    return response.json();\n\n\n  })\n .then(function(myJson) {\n\n\n  let lastDbItem=myJson[myJson.length-1].stoc;\n\n  let newStoc=lastDbItem.map((item, index)=>{\n\n\n return item.$numberInt;\n\n  })\n\ndata2=newStoc;\n\n    this.setState({items:data2})\n\n  }.bind(this))\n  .catch((err)=> console.log(err))\n\n\n};\n////////////// get data from database\n////////////// make requests to server\nlet interval=0;\nlet setIn=setInterval(function(){\ninterval++;\nif(interval>0){clearInterval(setIn)}\n///getData(); connect with local the server\n\n\n},2000)\n////////////// make requests to server\n\n}\n\n\n\ncomponentDidMount(){\n\n  this.getStoc()\n \n  \n\n}\n\ncomponentWillUpdate(nextProps,nextState){\n  let notInStock=nextState.redStoc;\n  let items = nextState.items.length;\n\n \n  \n  this.changeC(notInStock,items)\n  nProducts=items\n  \n //console.log(\"a\",nProducts)\n}\n\n\n\n\n\n  render() { \n    return (\n\n      <div className=\"App\">\n      <Dealers stoc={this.state.items} setActive={this.setActive} />\n  {  /*<button onClick={this.getStoc}>CLICK</button>*/}\n  \n  <div className='search'>\n\n  \n  \n    <input type=\"text\" ref=\"myInput\" id=\"item\" name=\"item\" placeholder=\"Search...\"  onKeyDown={this.keySub} onChange={this.findIt} >\n\n</input>\n\n<input type=\"submit\" value=\"Search\" onClick={()=>{this.findIt()}}></input>\n      \n    </div>\n\n\n    <div className='infos' ><h2>{this.state.maker}</h2><button onClick={this.notInS}style={this.stylesB}>{this.state.redStoc}</button></div>\n\n       <Jsonl stoc={this.state.items} setActive={this.setActive} fromDb={this.state.data} cRender={this.state.cRender} nProducts={nProducts} />\n\n<div className='footer'></div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","import React from 'react';\r\nimport \"./item.css\";\r\n\r\n\r\n\r\nconst Dealers =(props)=>{\r\n\r\n\r\n\r\n\r\n\r\n\r\n return (<div className=\"d-main\">\r\n <div className=\"dealer\">\r\n <button onClick={()=>{props.setActive('DF','DOVES')}}>DOVES</button>\r\n  <button onClick={()=>{props.setActive('MD','MERIDIAN')}}>MERIDIAN</button>\r\n   <button onClick={()=>{props.setActive('OR','ORGANICO')}}>ORGANICO</button>\r\n    <button onClick={()=>{props.setActive('LK','LUKES')}}>LUKES</button>\r\n    <button onClick={()=>{props.setActive('PE','PESUNION')}}>PESUNION</button>\r\n    <button onClick={()=>{props.setActive('FE','FISH4EVER')}}>FISH4EVER</button>\r\n    <button onClick={()=>{props.setActive('OL','PBROS')}}>PBROS</button>\r\n    <button onClick={()=>{props.setActive('WT','PALEO')}}>PALEO</button>\r\n  </div>\r\n\r\n  \r\n\r\n    </div>\r\n)\r\n\r\n}\r\n export default Dealers\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}